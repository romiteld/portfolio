/* Chess AI Demo Styles */

html {
  scroll-behavior: auto !important;
  overflow-anchor: none !important;
}

body {
  overflow-anchor: none !important;
}

*:focus {
  scroll-margin: 0 !important;
}

/* Removed empty .move-history-panel and .chat-panel rulesets */

.chess-board-container {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.chess-board {
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  grid-template-rows: repeat(8, 1fr);
  width: 100%;
  max-width: 480px; /* Reduced from 600px */
  aspect-ratio: 1 / 1;
  border: 2px solid #6b4f2e;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
  margin: 0 auto;
}

.chess-square {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  transition: background-color 0.2s ease;
}

.chess-square.white {
  background-color: #f0d9b5;
}

.chess-square.black {
  background-color: #b58863;
}

.chess-square.selected {
  background-color: rgba(106, 179, 76, 0.6) !important;
}

.chess-square.valid-move::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 30%;
  height: 30%;
  border-radius: 50%;
  background-color: rgba(0, 0, 0, 0.25);
  z-index: 1;
  pointer-events: none;
}

.chess-square.valid-capture::before {
  content: "";
  position: absolute;
  top: 5%;
  left: 5%;
  right: 5%;
  bottom: 5%;
  border: 4px solid rgba(220, 0, 0, 0.5);
  border-radius: 50%;
  z-index: 1;
  pointer-events: none;
}

.chess-piece {
  width: 85%;
  height: 85%;
  cursor: pointer;
  object-fit: contain;
  z-index: 2;
  -webkit-user-select: none;
  user-select: none;
  transition: transform 0.15s ease, filter 0.15s ease;
}

.chess-piece:hover {
  transform: scale(1.08);
  filter: drop-shadow(0 0 5px rgba(59, 130, 246, 0.6));
}

.chess-piece:active {
  cursor: grabbing;
  transform: scale(1.05);
}

.move-entry {
  display: grid;
  grid-template-columns: 3rem 1fr 1fr;
  gap: 0.5rem;
  padding: 0.5rem 0;
  border-bottom: 1px solid theme('colors.gray.100');
  /* consider dark:border-gray-700 if using Tailwind JIT or custom dark variants here */
}
.move-entry:nth-child(odd) {
  background-color: theme('colors.gray.50');
   /* consider dark:bg-gray-800/50 if using Tailwind JIT or custom dark variants here */
}


@keyframes movePiece {
  0% { transform: translate(0, 0) scale(1); }
  50% { transform: translate(var(--targetXHalf), var(--targetYHalf)) scale(1.1); }
  100% { transform: translate(var(--targetX), var(--targetY)) scale(1); }
}

.chess-piece.moving {
  position: absolute;
  animation: movePiece 0.3s cubic-bezier(0.25, 0.1, 0.25, 1) forwards;
  pointer-events: none;
}

/* CSS for progress bar fill using custom property */
.progress-bar-fill {
  width: var(--progress-width, 0%); /* Default to 0% if property not set */
  transition: width 0.3s ease-in-out; /* Animate width changes */
}

/* Player metrics progress bar styling */
:root {
  --progress-width: 0%;
  --progress-width-opening: 0%;
  --progress-width-tactical: 0%;
  --progress-width-positional: 0%;
  --progress-width-endgame: 0%;
  --progress-width-aggressiveness: 0%;
  --progress-width-defensiveness: 0%;
  --progress-width-opening-preparation: 0%;
  --progress-width-tactical-awareness: 0%;
  --progress-width-positional-understanding: 0%;
  --chatbox-max-height: 15rem; /* Default from ChatBox.tsx */
}

/* Core player metric bar class with all shared properties */
.player-metric-bar {
  height: 100%;
  border-radius: 9999px; /* rounded-full */
  transition-property: width;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); /* transition-all */
  transition-duration: 500ms; /* duration-500 */
  background-color: theme('colors.blue.500');
}

/* Opening preparation bar */
.player-metric-opening-preparation {
  width: var(--progress-width-opening-preparation, 0%);
}

/* Positional understanding bar */
.player-metric-positional-understanding {
  width: var(--progress-width-positional-understanding, 0%);
}

/* Tactical awareness bar */
.player-metric-tactical-awareness {
  width: var(--progress-width-tactical-awareness, 0%);
}

/* Endgame skill bar */
.player-metric-endgame-skill {
  width: var(--progress-width-endgame-skill, 0%);
}

/* Playing style metrics */
.player-metric-aggressive {
  width: var(--progress-width-aggressive, 60%);
}

.player-metric-defensive {
  width: var(--progress-width-defensive, 70%);
}

/* AI strength metrics for left sidebar */
.ai-strength-metric-calculation {
  width: var(--progress-width-calculation, 85%);
}

.ai-strength-metric-strategy {
  width: var(--progress-width-strategy, 90%);
}

.ai-strength-metric-knowledge {
  width: var(--progress-width-knowledge, 95%);
}

.ai-strength-metric-creativity {
  width: var(--progress-width-creativity, 75%);
}

.ai-strength-metric-psychology {
  width: var(--progress-width-psychology, 70%);
}

.ai-strength-metric-endurance {
  width: var(--progress-width-endurance, 100%);
}

.player-metric-bar-opening {
    width: var(--progress-width-opening);
}

.player-metric-bar-tactical {
    width: var(--progress-width-tactical);
}

.player-metric-bar-capture {
    width: var(--progress-width-capture);
}

.player-metric-bar-check {
    width: var(--progress-width-check);
}

.player-metric-bar-accuracy {
  width: var(--progress-width-accuracy);
}

.player-metric-bar-opening-preparation {
  width: var(--progress-width-opening-preparation);
}

.player-metric-bar-tactical-awareness {
  width: var(--progress-width-tactical-awareness);
}

.player-metric-bar-positional-understanding {
  width: var(--progress-width-positional-understanding); /* New class */
}

.progress-bar-opening {
    width: var(--progress-width-opening);
}

.progress-bar-tactical {
    width: var(--progress-width-tactical);
}

.progress-bar-positional {
    width: var(--progress-width-positional);
}

.progress-bar-endgame {
    width: var(--progress-width-endgame);
}

.progress-bar-aggressiveness {
    width: var(--progress-width-aggressiveness);
}

.progress-bar-defensiveness {
    width: var(--progress-width-defensiveness);
}

.chatbox-messages-container {
  max-height: var(--chatbox-max-height, 15rem); /* Default to 15rem if variable not set */
  overflow-y: auto;
}

/* Responsive adjustments */
/* Removed empty media query blocks for .board-container and .chess-board */

@media (max-width: 767px) { /* md breakpoint in Tailwind */
  .chess-piece {
    width: 88%;
    height: 88%;
  }
}

@media (max-width: 480px) { /* sm or xs breakpoint in Tailwind */
  .chess-piece {
    width: 90%;
    height: 90%;
  }
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 16px;
  height: 16px;
  background: theme('colors.blue.500');
  cursor: pointer;
  border-radius: 50%;
  margin-top: -5px; 
}

input[type="range"]::-moz-range-thumb {
  width: 16px;
  height: 16px;
  background: theme('colors.blue.500');
  cursor: pointer;
  border-radius: 50%;
  border: none;
}

/* Tailwind Custom Scrollbar (Optional) */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}
::-webkit-scrollbar-track {
  background: theme('colors.gray.200');
  /* Apply dark mode using Tailwind's dark variant if configured in tailwind.config.js */
  /* e.g., @apply dark:bg-gray-700; */
  border-radius: 10px;
}
.dark ::-webkit-scrollbar-track { /* Example for dark mode */
    background: theme('colors.gray.700');
}

::-webkit-scrollbar-thumb {
  background: theme('colors.gray.400');
  border-radius: 10px;
}
.dark ::-webkit-scrollbar-thumb { /* Example for dark mode */
    background: theme('colors.gray.500');
}

::-webkit-scrollbar-thumb:hover {
  background: theme('colors.gray.500');
}
.dark ::-webkit-scrollbar-thumb:hover { /* Example for dark mode */
    background: theme('colors.gray.400');
}


* {
  scrollbar-width: thin;
  scrollbar-color: theme('colors.gray.400') theme('colors.gray.200');
}
/* For dark mode scrollbar in Firefox, you might need JavaScript or more complex CSS if not using OS theme */
.dark * {
  scrollbar-color: theme('colors.gray.500') theme('colors.gray.700');
}